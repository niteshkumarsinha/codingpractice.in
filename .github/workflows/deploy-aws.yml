name: CI/CD Pipeline for Coding Platform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-deploy:
    name: Build and Deploy Backend (Node.js) with AWS Lambda
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd backend/src
          npm install

      - name: Deploy Backend to AWS Lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          zip -r lambda-function.zip .
          aws lambda update-function-code --function-name your-lambda-function-name --zip-file fileb://lambda-function.zip
        working-directory: backend

  frontend-deploy:
    name: Build and Deploy Frontend (React) to S3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd frontend/src
          npm install

      - name: Build frontend
        run: |
          cd frontend/src
          npm run build

      - name: Deploy to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 sync frontend/src/build/ s3://your-s3-bucket-name --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id your-cloudfront-distribution-id --paths "/*"
